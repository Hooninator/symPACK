#/usr/bin/bash
COMPILE_MODE     = release
PAR_ND_LIBRARY   = ptscotch #not used right now
SEQ_ND_LIBRARY   = metis  #not used right now
USE_PROFILE      = 1
USE_PAPI         = 0
USE_IPM          = 0
USE_MAP          = 0
USE_TAU          = 0


# Different compiling and linking options.
SUFFIX       = ${PLATFORM}_v0.1

#compiler and tools
################################################################
CC           = cc 
CXX          = CC
FC           = ftn
LOADER       = CC


AR           = ar 
ARFLAGS      = rvcu
# For System V based machine without ranlib, like Cray and SGI,
# use touch instead.
#RANLIB      = touch
RANLIB       = ranlib

CP           = cp
RM           = rm
RMFLAGS      = -f
################################################################


#NGCHOL directory
NGCHOL_DIR     = ${SCRATCH}/ngchol
#${HOME}/ngchol_scratch




#required libraries directories
GFORTRAN_DIR  = 
METIS_DIR     = $(PREFIX)/release/parmetis-4.0.3/build/Linux-x86_64
PARMETIS_DIR  = $(PREFIX)/release/parmetis-4.0.3/build/Linux-x86_64
SCOTCH_DIR    = $(PREFIX)/release/scotch_6.0.0
MKL_DIR       = $(MKL_HOME)
LAPACK_DIR    = 
BLAS_DIR      =  
PAPI_DIR      = 
MAP_DIR       = ${PREFIX}/Map
SPARSELIB_DIR = ${PREFIX}/MatrixConverter

# Includes
NGCHOL_INCLUDE    = -I${NGCHOL_DIR}/include 
SPARSELIB_INCLUDE = -I ${SPARSELIB_DIR}/bebop_util/include -I ${SPARSELIB_DIR}/sparse_matrix_converter/include
INCLUDES          = ${NGCHOL_INCLUDE} ${SPARSELIB_INCLUDE}

# Libraries
GFORTRAN_LIB     = -L${GFORTRAN_DIR} -lgfortran
MKL_LIB = -Wl,--start-group $(MKL_DIR)/lib/intel64/libmkl_intel_lp64.a $(MKL_DIR)/lib/intel64/libmkl_core.a $(MKL_DIR)/lib/intel64/libmkl_sequential.a -Wl,--end-group -lm
LAPACK_LIB       = ${MKL_LIB} 
BLAS_LIB         = 
NGCHOL_LIB       = ${NGCHOL_DIR}/src/lingchol_${SUFFIX}.a
SPARSELIB_LIB    = ${SPARSELIB_DIR}/sparse_matrix_converter/libsparse_matrix_converter.a  ${SPARSELIB_DIR}/bebop_util/libbebop_util.a




# Graph partitioning libraries
METIS_LIB        = -L${METIS_DIR}/libmetis -lmetis
PARMETIS_LIB     = -L${PARMETIS_DIR}/libparmetis -lparmetis 
SCOTCH_LIB       = -L${SCOTCH_DIR}/lib -lscotchmetis -lscotch -lscotcherr
PTSCOTCH_LIB     = -L${SCOTCH_DIR}/lib -lptscotchparmetis -lptscotch -lptscotcherr -lscotch

#utility libraries and includes
PAPI_INCLUDE     = -I${PAPI_DIR}/include
PAPI_LIB         = -L${PAPI_DIR}/lib -lpapi
MAP_INCLUDE      =
MAP_LIB          = -L${MAP_DIR} -lmap-sampler-pmpi -Wl,--undefined,allinea_init_sampler_now -lmap-sampler -lstdc++ -lgcc_eh -Wl,--whole-archive -lpthread -Wl,--no-whole-archive -Wl,--eh-frame-hdr
INCLUDES        += ${PAPI_INCLUDE} ${MAP_INCLUDE}

#UPCXX
UPCXX_DIR        = ${PREFIX}/upcxx_install
include $(UPCXX_DIR)/include/upcxx.mak


# Different compiling and linking options.
ifeq (${COMPILE_MODE}, release)
  COMPILE_DEF    = -DRELEASE
  COMPILE_FLAG   = -fast -no-ipo -w  -g
endif
ifeq (${COMPILE_MODE}, debug)
  COMPILE_DEF    = -DDEBUG=1
  COMPILE_FLAG   = -O0 -w -g
endif

ifeq (${PAR_ND_LIBRARY}, ptscotch)
  PAR_ND_LIB = ${PTSCOTCH_LIB}
else
  PAR_ND_LIB = ${PARMETIS_LIB}
endif 

ifeq (${SEQ_ND_LIBRARY}, scotch)
  SEQ_ND_LIB = ${SCOTCH_LIB}
else
  SEQ_ND_LIB = ${METIS_LIB}
endif 

ifeq (${USE_PROFILE}, 1)
  PROFILE_FLAG  = -DPROFILE
endif

ifeq (${USE_PAPI}, 1)
  PAPI_FLAG  = -D_PAPI_
  UTIL_LIB   += ${PAPI_LIB}
endif

ifeq (${USE_IPM}, 1)
  UTIL_LIB  += ${IPM}
endif

ifeq (${USE_MAP}, 1)
  UTIL_LIB   += ${MAP_LIB}
endif

ifeq (${USE_TAU}, 1)
  CC           = tau_cc.sh 
  CXX          = tau_cxx.sh
  FC           = tau_f90.sh
  LOADER       = tau_cxx.sh
endif

LIBS  = ${NGCHOL_LIB} ${PAR_ND_LIB} ${SEQ_ND_LIB} ${LAPACK_LIB} ${BLAS_LIB} ${SPARSELIB_LIB} ${GFORTRAN_LIB} ${UTIL_LIB}

#NOW THE OPTIONS

#COMMON
  #MAPPINGS
    #COMPILE_DEF += -DMAP=row2D
    #COMPILE_DEF += -DMAP=col2D
    #COMPILE_DEF += -DMAP=modwrap2Dns
#    COMPILE_DEF += -DMAP=modwrap2D
#    COMPILE_DEF += -DMAPCLASS=Modwrap2D
#    COMPILE_DEF += -DMAPCLASS=Modwrap2DNS
#    COMPILE_DEF += -DMAPCLASS=Col2D
    COMPILE_DEF += -DMAPCLASS=Row2D
    #COMPILE_DEF += -DMAP=antichevron2D
    #COMPILE_DEF += -DMAP=chevron2D
    ## THIS ONE HAS TO BE DEBUGGED
    #COMPILE_DEF += -DMAP=antidiag2D
  #DEBUG
    #COMPILE_DEF += -D_DEBUG_ 

  #OTHER
    COMPILE_DEF += -DAdd_
    COMPILE_DEF += -DUSE_ABORT -DABORT


#DENSE
  #DEBUG
    #COMPILE_DEF += -D_DEBUG_PREFETCH_

  #OPTIONS
    COMPILE_DEF += -DASYNC_AGGREGATES
    COMPILE_DEF += -DASYNC_UPDATES
    #COMPILE_DEF += -DNO_ASYNC_COPY
    #COMPILE_DEF += -DASYNC_COPY_FENCE
    #COMPILE_DEF += -DDRAW_GRAPH
    COMPILE_DEF += -DCALLBACK

#SPARSE
    COMPILE_DEF += -D_TAU_TRACE_ 
    #COMPILE_DEF += -D_DEADLOCK_ 
    #COMPILE_DEF += -D_OUTPUT_ETREE_ 
    #COMPILE_DEF += -DTRACK_PROGRESS 
  #DEBUG
    #COMPILE_DEF += -D_DEBUG_PROGRESS_ 
    #COMPILE_DEF += -D_DEBUG_DELAY_ 
    #COMPILE_DEF += -D_DEBUG_UPDATES_
    # COMPILE_DEF += -DPROBE_FIRST 
 
  #OPTIONS 
    COMPILE_DEF += -DCOMPACT_AGGREGATES 
    #COMPILE_DEF += -DNO_INTRA_PROFILE 
    COMPILE_DEF += -D_CHECK_RESULT_ 
    COMPILE_DEF += -DRELAXED_SNODE 
    COMPILE_DEF += -DINTERVAL_TREE 
    #COMPILE_DEF += -D_AVL_ITREE_ 
    COMPILE_DEF += -D_DSW_ITREE_ 
    #COMPILE_DEF += -D_LAZY_INIT_ 
    #COMPILE_DEF += -D_LINEAR_SEARCH_FCLC_ 

    COMPILE_DEF += -DSINGLE_BLAS 
    COMPILE_DEF += -DDELAY_SNODES

  #DEPRECATED
    # COMPILE_DEF += -DUPDATE_LIST 
    # COMPILE_DEF += -D_CHECK_RESULT_SEQ_ 
    #COMPILE_DEF += -D_USE_TAU_ 

#OTHER
    COMPILE_DEF += -openmp -std=c++11 

#FLOADOPTS    = ${LIBS} -L/usr/local/lib  -lstdc++ 

CFLAGS       = ${COMPILE_FLAG} ${PROFILE_FLAG} ${PAPI_FLAG} ${INCLUDES}
FFLAGS       = ${COMPILE_FLAG} ${PROFILE_FLAG} ${PAPI_FLAG} ${INCLUDES}
CXXFLAGS     = $(UPCXX_CXXFLAGS) ${COMPILE_FLAG} ${PROFILE_FLAG} ${PAPI_FLAG} ${INCLUDES} 
CCDEFS       = ${COMPILE_DEF} 
CPPDEFS      = ${COMPILE_DEF} 
LOADOPTS     = ${PROFILE_FLAG} ${LIBS} -openmp


# Generate auto-dependencies 
%.d: %.c
	@set -e; rm -f $@; \
	$(CC) -M $(CCDEFS) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@;\
	rm -f $@.$$$$

%.d: %.cpp
	@set -e; rm -f $@; \
	$(CXX) -M $(CPPDEFS) $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@;\
	rm -f $@.$$$$

